const express = require("express");
require("dotenv").config();
require("express-async-errors");
const cors = require("cors");
const bodyParser = require("body-parser");
const cookieParser = require("cookie-parser");
const { errorHandler } = require("./middlewares/errorHandler");
const connectDB = require("./config/db_connection");
const http = require("http");
const socketIo = require("socket.io");
const morgan = require("morgan");

const { setSocketIo, getUserSockets } = require("./utils/socketManager");
const swaggerUi = require("swagger-ui-express");
const swaggerJsdoc = require("swagger-jsdoc");

// Routes
const authRoute = require("./routes/auth.routes");
const customerStoreRoute = require("./routes/customerStore.routes");
const cartRoute = require("./routes/cart.routes");
const orderRoute = require("./routes/order.routes");
const favoriteRoute = require("./routes/favorite.routes");
const locationRoute = require("./routes/location.routes");
const notificationRoute = require("./routes/notification.routes");
const userRoute = require("./routes/user.routes");
const uploadRoute = require("./routes/upload.routes");
const ratingRoute = require("./routes/rating.routes");
const dishRoute = require("./routes/dish.routes");
const toppingRoute = require("./routes/topping.routes");
const categoryRoute = require("./routes/category.routes");
const app = express();
connectDB();

app.use(morgan("dev"));
app.use(
  cors({
    origin: ["http://localhost:3000", "http://localhost:3001"],
    credentials: true,
  })
);
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());

PORT = process.env.PORT || 5000;

const swaggerDefinition = {
  openapi: "3.0.0",
  info: {
    title: "My API",
    version: "1.0.0",
    description: "Example Express API with autogenerated Swagger doc",
  },
  servers: [
    {
      url: `http://localhost:${PORT}`, // URL server backend
    },
  ],
};

const options = {
  swaggerDefinition,
  apis: ["./services/**/*.routes.js"], // đường dẫn chứa comment swagger
};

const swaggerSpec = swaggerJsdoc(options);

// Route Swagger UI
app.use("/api-docs", swaggerUi.serve, swaggerUi.setup(swaggerSpec));

app.get("/health", (req, res) => {
  res.status(200).json({ status: "OK" });
});

// Routes
app.use("/api/v1/auth", authRoute);
app.use("/api/v1/customer-store", customerStoreRoute);
app.use("/api/v1/cart", cartRoute);
app.use("/api/v1/order", orderRoute);
app.use("/api/v1/favorite", favoriteRoute);
app.use("/api/v1/location", locationRoute);
app.use("/api/v1/notification", notificationRoute);
app.use("/api/v1/user", userRoute);
app.use("/api/v1/upload", uploadRoute);
app.use("/api/v1/rating", ratingRoute);
app.use("/api/v1/dish", dishRoute);
app.use("/api/v1/topping", toppingRoute)
app.use("/api/v1/category", categoryRoute);

app.use(errorHandler);

const server = http.createServer(app);
const io = socketIo(server, { cors: { origin: "*" } });

server.listen(PORT, "0.0.0.0", () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
